/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class Engine */

#ifndef _Included_Engine
#define _Included_Engine
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     Engine
 * Method:    on
 * Signature: (Ljava/lang/String;Ljava/lang/reflect/Method;)V
 */
JNIEXPORT void JNICALL Java_Engine_on
  (JNIEnv *, jclass, jstring, jobject);

/*
 * Class:     Engine
 * Method:    fulladdress
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_Engine_fulladdress
  (JNIEnv *, jclass);

/*
 * Class:     Engine
 * Method:    nick
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_Engine_nick
  (JNIEnv *, jclass);

/*
 * Class:     Engine
 * Method:    user
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_Engine_user
  (JNIEnv *, jclass);

/*
 * Class:     Engine
 * Method:    host
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_Engine_host
  (JNIEnv *, jclass);

/*
 * Class:     Engine
 * Method:    event
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_Engine_event
  (JNIEnv *, jclass);

/*
 * Class:     Engine
 * Method:    args
 * Signature: ()[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_Engine_args
  (JNIEnv *, jclass);

/*
 * Class:     Engine
 * Method:    raw_args
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_Engine_raw_1args
  (JNIEnv *, jclass);

/*
 * Class:     Engine
 * Method:    raw_line
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_Engine_raw_1line
  (JNIEnv *, jclass);

/*
 * Class:     Engine
 * Method:    complete
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_Engine_complete
  (JNIEnv *, jclass);

/*
 * Class:     Engine
 * Method:    raw
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_Engine_raw
  (JNIEnv *, jclass, jstring);

/*
 * Class:     Engine
 * Method:    connect
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_Engine_connect
  (JNIEnv *, jclass);

/*
 * Class:     Engine
 * Method:    disconnect
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_Engine_disconnect
  (JNIEnv *, jclass);

/*
 * Class:     Engine
 * Method:    connected
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_Engine_connected
  (JNIEnv *, jclass);

/*
 * Class:     Engine
 * Method:    server
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_Engine_server
  (JNIEnv *, jclass);

/*
 * Class:     Engine
 * Method:    my_nick
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_Engine_my_1nick
  (JNIEnv *, jclass);

/*
 * Class:     Engine
 * Method:    my_ip
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_Engine_my_1ip
  (JNIEnv *, jclass);

/*
 * Class:     Engine
 * Method:    my_host
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_Engine_my_1host
  (JNIEnv *, jclass);

/*
 * Class:     Engine
 * Method:    my_user
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_Engine_my_1user
  (JNIEnv *, jclass);

/*
 * Class:     Engine
 * Method:    my_port
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_Engine_my_1port
  (JNIEnv *, jclass);

/*
 * Class:     Engine
 * Method:    channels
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_Engine_channels
  (JNIEnv *, jclass);

/*
 * Class:     Engine
 * Method:    nicks
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_Engine_nicks
  (JNIEnv *, jclass);

/*
 * Class:     Engine
 * Method:    modes
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_Engine_modes
  (JNIEnv *, jclass);

/*
 * Class:     Engine
 * Method:    whois
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_Engine_whois
  (JNIEnv *, jclass);

/*
 * Class:     Engine
 * Method:    lookup
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_Engine_lookup
  (JNIEnv *, jclass);

/*
 * Class:     Engine
 * Method:    color
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_Engine_color
  (JNIEnv *, jclass);

/*
 * Class:     Engine
 * Method:    topic
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_Engine_topic
  (JNIEnv *, jclass);

/*
 * Class:     Engine
 * Method:    echo
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_Engine_echo
  (JNIEnv *, jclass);

/*
 * Class:     Engine
 * Method:    window
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_Engine_window
  (JNIEnv *, jclass);

/*
 * Class:     Engine
 * Method:    menu
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_Engine_menu
  (JNIEnv *, jclass);

/*
 * Class:     Engine
 * Method:    hotkey
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_Engine_hotkey
  (JNIEnv *, jclass);

/*
 * Class:     Engine
 * Method:    alias
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_Engine_alias
  (JNIEnv *, jclass);

/*
 * Class:     Engine
 * Method:    channel
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_Engine_channel
  (JNIEnv *, jclass);

/*
 * Class:     Engine
 * Method:    query
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_Engine_query
  (JNIEnv *, jclass);

/*
 * Class:     Engine
 * Method:    chat
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_Engine_chat
  (JNIEnv *, jclass);

/*
 * Class:     Engine
 * Method:    queries
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_Engine_queries
  (JNIEnv *, jclass);

/*
 * Class:     Engine
 * Method:    chats
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_Engine_chats
  (JNIEnv *, jclass);

/*
 * Class:     Engine
 * Method:    say
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_Engine_say
  (JNIEnv *, jclass);

/*
 * Class:     Engine
 * Method:    input
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_Engine_input
  (JNIEnv *, jclass);

#ifdef __cplusplus
}
#endif
#endif
