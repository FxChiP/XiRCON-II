#------------------------------------------------------------------------
#  rfc1459.test
#
#  This tcltest script checks the IRCParse class.
#  tclTestAdapter.cpp contain the commands this test script calls.
#
#------------------------------------------------------------------------
# RCS: @(#) $Id: rfc1459.test,v 1.2 2002/07/22 03:50:19 davygrvy Exp $
#------------------------------------------------------------------------

if {[lsearch [namespace children] ::tcltest] == -1} {
    package require tcltest
    namespace import -force ::tcltest::*
}

if {![llength [info commands IRC::testparse]]} {
  load irc_engine Test
}


#
# extracting prefix (event source)
#

test parser-0.1 {extract event source (simple/server)} {
    set capture [IRC::testparse {:someone PRIVMSG #somechan :hi all!}]
    lrange $capture 1 3
} {someone {} someone}

test parser-0.2 {extract event source (full)} {
    set capture [IRC::testparse {:nick!user@host PRIVMSG #somechan :hi all!}]
    lrange $capture 0 3
} {nick!user@host nick user host}


#
# extracting command (event)
#

test parser-1.0 {extract event} {
    set capture [IRC::testparse {:nick!user@host PRIVMSG #somechan :hi all!}]
    lindex $capture 4
} {PRIVMSG}

test parser-1.1 {just command, no params or prefix} {
    IRC::testparse {PRIVMSG}
} {{} {} {} {} PRIVMSG {} {} PRIVMSG}

test parser-1.2 {just command, no params or prefix (whitespace trimmed)} {
    IRC::testparse {PRIVMSG  }
} {{} {} {} {} PRIVMSG {} {} {PRIVMSG  }}


#
#  Extracting params (args)
#

test parser-2.0 {15 params max} {
    set capture [IRC::testparse {:nick!user@host SOMEEVENT 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17}]
    set args [lindex $capture 5]
    list [llength $args] [lindex $args 14]
} {15 {15 16 17}}

test parser-2.1 {trailing with spaces} {
    set capture [IRC::testparse {:nick!user@host SOMEEVENT 1 2 3 4 :i am a trailing param}]
    set args [lindex $capture 5]
    list [llength $args] [lindex $args 4]
} {5 {i am a trailing param}}

test parser-2.2 {params munged with extra spaces} {
    set capture [IRC::testparse {:nick!user@host SOMEEVENT 1 2     3  4   5 }]
    set args [lindex $capture 5]
    list [llength $args] $args
} {5 {1 2 3 4 5}}


#
# Failing to parse bad form.
#

test parser-3.0 {bad form -- null string} {
    set err [catch {IRC::testparse {}} msg]
    list $err $msg
} {1 {}}

test parser-3.1 {bad form -- no command} {
    set err [catch {IRC::testparse {:nick!user@host}} msg]
    list $err $msg
} {1 {}}

test parser-3.2 {bad form -- no command, extra space} {
    set err [catch {IRC::testparse {:nick!user@host }} msg]
    list $err $msg
} {1 {}}
